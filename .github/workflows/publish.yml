name: Publish

on:
  release:
    types: [ created ]

jobs:
  getrelease:
    steps:
    - name: Get release
      run: |
        echo "Getting release for tag: $GITHUB_REF_NAME"
        RELEASE_RESPONSE=$(curl -Ls \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          -H "Content-Type: application/vnd.github+json" \
          "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/$GITHUB_REF_NAME")
        GITHUB_RELEASE_ID=$(echo $RELEASE_RESPONSE | grep -oP '"id":\s?\K\d+' | head -n 1)
        GITHUB_UPLOAD_URL=$(echo $RELEASE_RESPONSE | grep -oP '"upload_url": "\K[^"]+' | sed -e "s/{?name,label}//") >> $GITHUB_ENV
        echo "Release ID: $GITHUB_RELEASE_ID"
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        self-contained: [false, true]
        target: ["win-x64", "linux-x64", "osx-x64", "osx-arm64"]
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Publish
      run: |
        NAME="${{ matrix.target }}$( [ "${{ matrix.self-contained }}" = "true" ] && echo "-sc" || echo "" )"
        FILENAME="$NAME.zip" 
        dotnet publish -c Release -r ${{ matrix.target }} --self-contained "${{ matrix.self-contained }}" -p:PublishSingleFile=true -p:Version=${GITHUB_REF_NAME:1} -o publish/$name src/BitJuice.Backup/BitJuice.Backup.csproj
        cd publish/$NAME
        zip -r ../$FILENAME ./*
        cd ../..
        echo "Uploading $FILENAME"
        curl -L \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @"publish/$FILENAME" \
          "$GITHUB_UPLOAD_URL?name=$FILENAME"